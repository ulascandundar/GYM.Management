@page "/wallet/{Id:guid}/{Name}"
@using GYM.Management.Wallets;
@using Volo.Abp.Application.Dtos;
@inject IWalletService _walletService
<Row>
    <Column ColumnSize="ColumnSize.Is6">
        <div class="credit-card-wrap">
            <div class="mk-icon-world-map"></div>
            <div class="credit-card-inner">
                <header class="header">
                    <div class="credit-logo">
                        <span class="text">KOLAYLA</span>
                        @*<img src="/images/mastercard.png" />*@
                    </div>
                </header>
                <div class="mk-icon-sim"></div>
                <div class="credit-font credit-card-number" data-text="BAKİYE : @walletDetailDto.Balance TL">0000 0000 0000 0000</div>
                <footer class="footer">
                    <div class="clearfix">
                        <div class="pull-left">
                            @* <div class="credit-card-date"><span class="title">BAKİYE</span><span class="credit-font">@walletDetailDto.Balance TL</span></div>*@
                            <div class="credit-font credit-author">@walletDetailDto.TrainerName</div>
                        </div>
                        <div class="pull-right"><div class="mk-icon-visa"></div></div>
                    </div>
                </footer>
            </div>
        </div>
    </Column>
    <Column ColumnSize="ColumnSize.Is6"> 

        <Text>İŞLEM GEÇMİŞİ</Text>
        @foreach (var item in walletDetailDto.Trainsactions)
        {
            <Row>
                <Card TextColor="TextColor.White" Background="Background.Dark">
                    <CardHeader>
                        @DateTime.UtcNow.ToString("MM/dd/yyyy HH:mm:ss")
                    </CardHeader>
                    <CardBody>
                        <Text TextColor="TextColor.Success">+ @item.Amount</Text>
                    </CardBody>
                    <CardFooter>
                        @item.Description
                    </CardFooter>
                </Card>
            </Row>
        }
    </Column>
    
</Row>
@code {
    [Parameter]
    public Guid Id { get; set; }
    [Parameter]
    public string Name { get; set; }
    private PagedAndSortedResultRequestDto Filter { get; set; } = new PagedAndSortedResultRequestDto();
    private WalletDetailDto walletDetailDto = new WalletDetailDto();
    protected override async Task OnInitializedAsync()
    {
        walletDetailDto = await _walletService.GetDetail(Id,Name);
    }
}
