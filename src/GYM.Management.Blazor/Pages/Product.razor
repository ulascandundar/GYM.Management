@page "/product"
@attribute [Authorize(ManagementPermissions.Product.Default)]
@using GYM.Management.Localization;
@using GYM.Management.Permissions;
@using GYM.Management.Products;
@using Microsoft.Extensions.Localization;
@using Volo.Abp.Application.Dtos;
@inject IStringLocalizer<ManagementResource> L
@inherits AbpCrudPageBase<IProductService, ProductDto, Guid, PagedAndSortedResultRequestDto, ProductCreateDto>
<Card>
    <CardHeader>
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h2>Ürünler</h2>
            </Column>
            <Column ColumnSize="ColumnSize.IsAuto">
                <Button Color="Color.Primary"
                        Clicked="OpenCreateModalAsync">
                    Yeni Ürün
                </Button>
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="ProductDto"
                  Data="Entities"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize">
            <DataGridColumns>
                <DataGridEntityActionsColumn TItem="ProductDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="ProductDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="ProductDto"
                                          Text="Güncelle"
                                          Clicked="() => OpenEditModalAsync(context)" />
                            <EntityAction TItem="ProductDto"
                                          Text="Sil"
                                          Clicked="() => DeleteEntityAsync(context)"
                                          ConfirmationMessage="() => GetDeleteConfirmationMessage(context)" />
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>
                <DataGridColumn TItem="ProductDto"
                                Field="@nameof(ProductDto.Name)"
                                Caption="İsim"></DataGridColumn>
                <DataGridColumn TItem="ProductDto"
                                Field="@nameof(ProductDto.BuyPrice)"
                                Caption="Fiyat">
                </DataGridColumn>
                <DataGridColumn TItem="ProductDto"
                                Field="@nameof(ProductDto.Description)"
                                Caption="Açıklama"></DataGridColumn>
                <DataGridColumn TItem="ProductDto"
                                Field="@nameof(ProductDto.Stock)"
                                Caption="Stok"></DataGridColumn>
                <DataGridColumn TItem="ProductDto"
                                Field="@nameof(ProductDto.StockPrice)"
                                Caption="Stok Birim Fiyatı"></DataGridColumn>
                <DataGridColumn TItem="ProductDto"
                                Field="@nameof(ProductDto.CreationTime)"
                                Caption="Eklenme Tarihi">
                    <DisplayTemplate>
                        @context.CreationTime.ToLongDateString()
                    </DisplayTemplate>
                </DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>
<Modal @ref="@CreateModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>Yeni Ürün</ModalTitle>
                <CloseButton Clicked="CloseCreateModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@CreateValidationsRef" Model="@NewEntity" ValidateOnLoad="false">
                    <Validation>
                        <Field>
                            <FieldLabel>İsim</FieldLabel>
                            <TextEdit @bind-Text="@NewEntity.Name">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation>
                        <Field>
                            <FieldLabel>Açıklama</FieldLabel>
                            <TextEdit @bind-Text="@NewEntity.Description">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation>
                        <Field>
                            <FieldLabel>Başlangıç Stoğu</FieldLabel>
                            <NumericEdit TValue="int" @bind-Text="@NewEntity.Stock">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </NumericEdit>
                        </Field>
                    </Validation>
                    <Validation>
                        <Field>
                            <FieldLabel>Stok Fiyatı</FieldLabel>
                            <NumericEdit TValue="int" @bind-Text="@NewEntity.StockPrice">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </NumericEdit>
                        </Field>
                    </Validation>
                    <Field>
                        <FieldLabel>Satış Fiyat</FieldLabel>
                        <NumericEdit TValue="decimal" @bind-Value="NewEntity.BuyPrice" />
                    </Field>
                   
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateModalAsync">İptal</Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="CreateEntityAsync">Kaydet</Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>
<Modal @ref="@EditModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@EditingEntity.Name</ModalTitle>
                <CloseButton Clicked="CloseEditModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditValidationsRef" Model="@NewEntity" ValidateOnLoad="false">
                    <Validation>
                        <Field>
                            <FieldLabel>İsim</FieldLabel>
                            <TextEdit @bind-Text="@EditingEntity.Name">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation>
                        <Field>
                            <FieldLabel>Açıklama</FieldLabel>
                            <TextEdit @bind-Text="@EditingEntity.Description">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation>
                        <Field>
                            <FieldLabel>Stok Fiyatı</FieldLabel>
                            <NumericEdit TValue="int" @bind-Text="@EditingEntity.StockPrice">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </NumericEdit>
                        </Field>
                    </Validation>
                   
                    <Field>
                        <FieldLabel>Fiyat</FieldLabel>
                        <NumericEdit TValue="decimal" @bind-Value="EditingEntity.BuyPrice" />
                    </Field>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditModalAsync">İptal</Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="UpdateEntityAsync">Kaydet</Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

@code {
    public Product()
    {
        CreatePolicyName = ManagementPermissions.Product.Create;
        UpdatePolicyName = ManagementPermissions.Product.Edit;
        DeletePolicyName = ManagementPermissions.Product.Delete;
    }
}
